<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="driver__assistance_8cpp" kind="file" language="C++">
    <compoundname>driver_assistance.cpp</compoundname>
    <includes local="yes">ros/ros.h</includes>
    <includes local="yes">algorithm</includes>
    <includes local="yes">cmath</includes>
    <includes local="yes">geometry_msgs/Twist.h</includes>
    <includes local="yes">sensor_msgs/LaserScan.h</includes>
    <includes local="yes">final_assignment/Command.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/driver_assistance.cpp</label>
        <link refid="driver__assistance_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cmath</label>
      </node>
      <node id="5">
        <label>geometry_msgs/Twist.h</label>
      </node>
      <node id="2">
        <label>ros/ros.h</label>
      </node>
      <node id="6">
        <label>sensor_msgs/LaserScan.h</label>
      </node>
      <node id="7">
        <label>final_assignment/Command.h</label>
      </node>
      <node id="3">
        <label>algorithm</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="driver__assistance_8cpp_1a407c3efba665d276a38229f905bef352" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool is_active</definition>
        <argsstring></argsstring>
        <name>is_active</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Variable to turn on and off the node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/driver_assistance.cpp" line="51" column="6" bodyfile="src/driver_assistance.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="driver__assistance_8cpp_1acb18293a378c57c1971e2317c62b8af7" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float d_br</definition>
        <argsstring></argsstring>
        <name>d_br</name>
        <briefdescription>
<para>Alert distance for avoiding obstacles, distance break. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/driver_assistance.cpp" line="52" column="7" bodyfile="src/driver_assistance.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="driver__assistance_8cpp_1a7f7e4724cf57d59513b39c5ecc81adc8" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float speed</definition>
        <argsstring></argsstring>
        <name>speed</name>
        <briefdescription>
<para>Linear speed of the robot. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/driver_assistance.cpp" line="53" column="7" bodyfile="src/driver_assistance.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="driver__assistance_8cpp_1a610313636194c4234b6130ce65c1874b" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float turn</definition>
        <argsstring></argsstring>
        <name>turn</name>
        <briefdescription>
<para>Angular speed of the robot. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/driver_assistance.cpp" line="54" column="7" bodyfile="src/driver_assistance.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="driver__assistance_8cpp_1a363c840b0a6f4eace19eaeaaf1b3a422" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int nsect</definition>
        <argsstring></argsstring>
        <name>nsect</name>
        <initializer>= 9</initializer>
        <briefdescription>
<para>Number of sectors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/driver_assistance.cpp" line="55" column="5" bodyfile="src/driver_assistance.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="driver__assistance_8cpp_1ac261b45b6346e633de22d510c9f6a770" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int front</definition>
        <argsstring></argsstring>
        <name>front</name>
        <initializer>= std::floor( <ref refid="driver__assistance_8cpp_1a363c840b0a6f4eace19eaeaaf1b3a422" kindref="member">nsect</ref> / 2 )</initializer>
        <briefdescription>
<para>Index of the frontal sector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/driver_assistance.cpp" line="56" column="5" bodyfile="src/driver_assistance.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="driver__assistance_8cpp_1a4e2bfb4f8d8f41126e011c2d9d2c3a52" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int sector_nelem</definition>
        <argsstring></argsstring>
        <name>sector_nelem</name>
        <initializer>= std::floor( 720/<ref refid="driver__assistance_8cpp_1a363c840b0a6f4eace19eaeaaf1b3a422" kindref="member">nsect</ref> )</initializer>
        <briefdescription>
<para>Number of laser surveys per sector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/driver_assistance.cpp" line="57" column="5" bodyfile="src/driver_assistance.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="driver__assistance_8cpp_1a350594df3e8f6948c8462edfd41ce086" prot="public" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher pub</definition>
        <argsstring></argsstring>
        <name>pub</name>
        <briefdescription>
<para>Publisher on cmd_vel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/driver_assistance.cpp" line="58" column="16" bodyfile="src/driver_assistance.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="driver__assistance_8cpp_1a91c136bc3c91e4ea7a59bbbc1614109f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void functionCallback</definition>
        <argsstring>(const sensor_msgs::LaserScan::ConstPtr &amp;msg)</argsstring>
        <name>functionCallback</name>
        <param>
          <type>const sensor_msgs::LaserScan::ConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Function callback for the base_scan subscriber.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the message of type LaserScan published on the * /base_scan * topic.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
If the flag is_active is true, this function calls the * scanSectors * function, then the function * logic * implements the choice made through sectors. If the function * logic * does not take any decision, then the * integral_logic * function is called.</para>
        </inbodydescription>
        <location file="src/driver_assistance.cpp" line="61" column="6" bodyfile="src/driver_assistance.cpp" bodystart="61" bodyend="96" declfile="src/driver_assistance.cpp" declline="42" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="driver__assistance_8cpp_1ae6c8909be052898336f00323b26d5c36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void scanSectors</definition>
        <argsstring>(float *ranges, float *sectors)</argsstring>
        <name>scanSectors</name>
        <param>
          <type>float *</type>
          <declname>ranges</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sectors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Function to search for the closest obstacle in each sector.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ranges</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the vector provided by the laser scanner.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sectors</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the vector to fill.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
It fills sectors with the distance of the closest obstacle in this specific sector, searching in the ranges vector.</para>
        </inbodydescription>
        <location file="src/driver_assistance.cpp" line="98" column="6" bodyfile="src/driver_assistance.cpp" bodystart="98" bodyend="123" declfile="src/driver_assistance.cpp" declline="43" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="driver__assistance_8cpp_1a52631c8fff8878c9a417d113e429f8fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int logic</definition>
        <argsstring>(float *sectors)</argsstring>
        <name>logic</name>
        <param>
          <type>float *</type>
          <declname>sectors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Function that rapresents the robot&apos;s logic implementation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sectors</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the vector of distances.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 choice made 0 choice not made</para>
</simplesect>
This function implements the logical part of the code, choosing whether to drive the robot forward or to make it turn to avoid obstacles. It&apos;s based on the information in the sectors vector, so previously filtered by the scanSector function. According to the choice made, it calls the drive function to move the robot.</para>
        </inbodydescription>
        <location file="src/driver_assistance.cpp" line="125" column="5" bodyfile="src/driver_assistance.cpp" bodystart="125" bodyend="180" declfile="src/driver_assistance.cpp" declline="44" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="driver__assistance_8cpp_1a550dc2b19b6710b93b95e10e8c1ad593" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void integral_logic</definition>
        <argsstring>(float *ranges)</argsstring>
        <name>integral_logic</name>
        <param>
          <type>float *</type>
          <declname>ranges</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Function to decide where to go when there are obstales all around the robot.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ranges</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the vector provided by the laser scanner.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function implements the second logical part of the code, and it&apos;s executed only when the first one can not make any choice. It can only turn the robot, and it does it based on the information included in the ranges vector. It computes the integral (calling the * integral * function) of the distance on the right-side and the left-side of the robot, obtaining the left and right area. Lastly, comparing these two values decides where to turn the robot; and calls the * drive * function to move it.</para>
        </inbodydescription>
        <location file="src/driver_assistance.cpp" line="182" column="6" bodyfile="src/driver_assistance.cpp" bodystart="182" bodyend="210" declfile="src/driver_assistance.cpp" declline="45" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="driver__assistance_8cpp_1a948754fd289e606979801339f15c12aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double integral</definition>
        <argsstring>(float *values, int start, int end)</argsstring>
        <name>integral</name>
        <param>
          <type>float *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Function to perform a discrete integral with the trapezium method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the vector on which it computes the discrete integral.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the index of the initial value.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the index of the final value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double with the calculated area.</para>
</simplesect>
The discrete integral is computed between start and end inclusive.</para>
        </inbodydescription>
        <location file="src/driver_assistance.cpp" line="212" column="8" bodyfile="src/driver_assistance.cpp" bodystart="212" bodyend="234" declfile="src/driver_assistance.cpp" declline="46" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="driver__assistance_8cpp_1af5fbee6c549866cdf0a418f4a1b929ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drive</definition>
        <argsstring>(float straight, float turn)</argsstring>
        <name>drive</name>
        <param>
          <type>float</type>
          <declname>straight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>turn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Function to drive the robot.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>straight</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the linear velocity.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>turn</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the angular velocity.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function fills the geometry message and publishes it on the topic * /cmd_vel *.</para>
        </inbodydescription>
        <location file="src/driver_assistance.cpp" line="236" column="6" bodyfile="src/driver_assistance.cpp" bodystart="236" bodyend="253" declfile="src/driver_assistance.cpp" declline="47" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="driver__assistance_8cpp_1a5d7a455f1d58eb3e57a53289086ac114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool server_response</definition>
        <argsstring>(final_assignment::Command::Request &amp;req, final_assignment::Command::Response &amp;res)</argsstring>
        <name>server_response</name>
        <param>
          <type>final_assignment::Command::Request &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>final_assignment::Command::Response &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Function callback to the * /command * service.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the service&apos;s request.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the service&apos;s response.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>always true.</para>
</simplesect>
This function increases or decreases the speed of the motor depending on the message received and replies with the updated velocity. It also updates the robot&apos;s distance break: which is proportional to its speed.</para>
        </inbodydescription>
        <location file="src/driver_assistance.cpp" line="255" column="6" bodyfile="src/driver_assistance.cpp" bodystart="255" bodyend="303" declfile="src/driver_assistance.cpp" declline="48" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="driver__assistance_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/driver_assistance.cpp" line="306" column="5" bodyfile="src/driver_assistance.cpp" bodystart="306" bodyend="330"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Node to drive the robot avoiding obstacles. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ettore Sani</para>
</simplesect>
<simplesect kind="version"><para>1.0</para>
</simplesect>
<simplesect kind="date"><para>27/02/2022</para>
</simplesect>
Subscribes to: <linebreak/>
 /base_scan</para>
<para>Publishes to: <linebreak/>
 /my_vel</para>
<para>Services : <linebreak/>
 /command</para>
<para>Description :</para>
<para>This node aims to control the robot in drive assistance mode. Through the service * /command *, the user can increase or decrease the linear and angular velocity of the robot. Reading data from * /base_scan * the robot can know the distance from obstacles; then it is implemented a logic that allows the robot to move without hurting them. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="33"><highlight class="comment">/*<sp/>LIBRARIES<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ros/ros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;algorithm&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cmath&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;geometry_msgs/Twist.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sensor_msgs/LaserScan.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;final_assignment/Command.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FUNCTION<sp/>HEADERS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1a91c136bc3c91e4ea7a59bbbc1614109f" kindref="member">functionCallback</ref><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sensor_msgs::LaserScan::ConstPtr&amp;<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1ae6c8909be052898336f00323b26d5c36" kindref="member">scanSectors</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>ranges,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>sectors<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1a52631c8fff8878c9a417d113e429f8fb" kindref="member">logic</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>sectors<sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1a550dc2b19b6710b93b95e10e8c1ad593" kindref="member">integral_logic</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>ranges<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1a948754fd289e606979801339f15c12aa" kindref="member">integral</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>values,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end<sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1af5fbee6c549866cdf0a418f4a1b929ca" kindref="member">drive</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>straight,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1a610313636194c4234b6130ce65c1874b" kindref="member">turn</ref><sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1a5d7a455f1d58eb3e57a53289086ac114" kindref="member">server_response</ref>(<sp/>final_assignment::Command::Request<sp/>&amp;req,<sp/>final_assignment::Command::Response<sp/>&amp;res<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GLOBAL<sp/>VARIABLES<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1a407c3efba665d276a38229f905bef352" kindref="member">is_active</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1acb18293a378c57c1971e2317c62b8af7" kindref="member">d_br</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1a7f7e4724cf57d59513b39c5ecc81adc8" kindref="member">speed</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1a610313636194c4234b6130ce65c1874b" kindref="member">turn</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1a363c840b0a6f4eace19eaeaaf1b3a422" kindref="member">nsect</ref><sp/>=<sp/>9;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1ac261b45b6346e633de22d510c9f6a770" kindref="member">front</ref><sp/>=<sp/>std::floor(<sp/><ref refid="driver__assistance_8cpp_1a363c840b0a6f4eace19eaeaaf1b3a422" kindref="member">nsect</ref><sp/>/<sp/>2<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1a4e2bfb4f8d8f41126e011c2d9d2c3a52" kindref="member">sector_nelem</ref><sp/>=<sp/>std::floor(<sp/>720/<ref refid="driver__assistance_8cpp_1a363c840b0a6f4eace19eaeaaf1b3a422" kindref="member">nsect</ref><sp/>);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal">ros::Publisher<sp/><ref refid="driver__assistance_8cpp_1a350594df3e8f6948c8462edfd41ce086" kindref="member">pub</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FUNCTIONS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1a91c136bc3c91e4ea7a59bbbc1614109f" kindref="member">functionCallback</ref><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sensor_msgs::LaserScan::ConstPtr&amp;<sp/>msg<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="driver__assistance_8cpp_1a407c3efba665d276a38229f905bef352" kindref="member">is_active</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Preallocates<sp/>variables.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sectors[<ref refid="driver__assistance_8cpp_1a363c840b0a6f4eace19eaeaaf1b3a422" kindref="member">nsect</ref>];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Closest<sp/>distance<sp/>from<sp/>obstacle<sp/>in<sp/>each<sp/>sector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ranges[720];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>of<sp/>the<sp/>laser_scan<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::fill_n(sectors,<sp/><ref refid="driver__assistance_8cpp_1a363c840b0a6f4eace19eaeaaf1b3a422" kindref="member">nsect</ref>,<sp/>10);<sp/><sp/></highlight><highlight class="comment">//<sp/>Initializes<sp/>the<sp/>values<sp/>in<sp/>the<sp/>sectors<sp/>float<sp/>array<sp/>to<sp/>10.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copies<sp/>the<sp/>ranges<sp/>values<sp/>in<sp/>the<sp/>base_scan<sp/>message<sp/>into<sp/>an<sp/>array.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>720;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ranges[i]<sp/>=<sp/>msg<sp/>-&gt;<sp/>ranges[i];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calls<sp/>the<sp/>function<sp/>scanSector<sp/>to<sp/>fill<sp/>the<sp/>sectors<sp/>array.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1ae6c8909be052898336f00323b26d5c36" kindref="member">scanSectors</ref>(<sp/>ranges,<sp/>sectors<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>function<sp/>logic<sp/>to<sp/>decide<sp/>what<sp/>to<sp/>do.<sp/>If<sp/>it<sp/>can<sp/>not<sp/>take<sp/>a<sp/>decision,<sp/>then<sp/>call<sp/>the<sp/>function</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_logic.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="driver__assistance_8cpp_1a52631c8fff8878c9a417d113e429f8fb" kindref="member">logic</ref>(<sp/>sectors<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1a550dc2b19b6710b93b95e10e8c1ad593" kindref="member">integral_logic</ref>(<sp/>ranges<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1ae6c8909be052898336f00323b26d5c36" kindref="member">scanSectors</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>ranges,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>sectors<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/><ref refid="driver__assistance_8cpp_1a363c840b0a6f4eace19eaeaaf1b3a422" kindref="member">nsect</ref>;<sp/>i++<sp/>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>all<sp/>sectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="driver__assistance_8cpp_1a4e2bfb4f8d8f41126e011c2d9d2c3a52" kindref="member">sector_nelem</ref>;<sp/>j++)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>all<sp/>elements<sp/>in<sp/>each<sp/>sector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>it<sp/>finds<sp/>a<sp/>closest<sp/>obstacle,<sp/>than<sp/>update<sp/>the<sp/>sectors<sp/>array.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ranges[i*<ref refid="driver__assistance_8cpp_1a4e2bfb4f8d8f41126e011c2d9d2c3a52" kindref="member">sector_nelem</ref>+j]<sp/>&lt;<sp/>sectors[i])<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sectors[i]<sp/>=<sp/>ranges[i*<ref refid="driver__assistance_8cpp_1a4e2bfb4f8d8f41126e011c2d9d2c3a52" kindref="member">sector_nelem</ref>+j];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1a52631c8fff8878c9a417d113e429f8fb" kindref="member">logic</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>sectors<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sectors[<ref refid="driver__assistance_8cpp_1ac261b45b6346e633de22d510c9f6a770" kindref="member">front</ref>]<sp/>&gt;<sp/><ref refid="driver__assistance_8cpp_1acb18293a378c57c1971e2317c62b8af7" kindref="member">d_br</ref><sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>The<sp/>frontal<sp/>sector<sp/>is<sp/>obstacle-free.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Searchs<sp/>in<sp/>the<sp/>front-right<sp/>and<sp/>in<sp/>the<sp/>front-left<sp/>sectors<sp/>if<sp/>there<sp/>are<sp/>obstacles,<sp/>to<sp/>line<sp/>up<sp/>with</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>track.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(sectors[<ref refid="driver__assistance_8cpp_1ac261b45b6346e633de22d510c9f6a770" kindref="member">front</ref>+1]<sp/>&lt;=<sp/>0.8<sp/>*<sp/><ref refid="driver__assistance_8cpp_1acb18293a378c57c1971e2317c62b8af7" kindref="member">d_br</ref>)<sp/>&amp;&amp;<sp/>(sectors[<ref refid="driver__assistance_8cpp_1ac261b45b6346e633de22d510c9f6a770" kindref="member">front</ref>-1]<sp/>&gt;=<sp/><ref refid="driver__assistance_8cpp_1acb18293a378c57c1971e2317c62b8af7" kindref="member">d_br</ref>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;dist:<sp/>%.2f,<sp/>speed:<sp/>%.2f,<sp/>free<sp/>road,<sp/>turn<sp/>right&quot;</highlight><highlight class="normal">,<sp/>sectors[<ref refid="driver__assistance_8cpp_1ac261b45b6346e633de22d510c9f6a770" kindref="member">front</ref>],<sp/><ref refid="driver__assistance_8cpp_1a7f7e4724cf57d59513b39c5ecc81adc8" kindref="member">speed</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1af5fbee6c549866cdf0a418f4a1b929ca" kindref="member">drive</ref>(<sp/><ref refid="driver__assistance_8cpp_1a7f7e4724cf57d59513b39c5ecc81adc8" kindref="member">speed</ref>,<sp/><ref refid="driver__assistance_8cpp_1a610313636194c4234b6130ce65c1874b" kindref="member">turn</ref><sp/>-<sp/>0.4<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(sectors[<ref refid="driver__assistance_8cpp_1ac261b45b6346e633de22d510c9f6a770" kindref="member">front</ref>-1]<sp/>&lt;=<sp/>0.8<sp/>*<sp/><ref refid="driver__assistance_8cpp_1acb18293a378c57c1971e2317c62b8af7" kindref="member">d_br</ref>)<sp/>&amp;&amp;<sp/>(sectors[<ref refid="driver__assistance_8cpp_1ac261b45b6346e633de22d510c9f6a770" kindref="member">front</ref>+1]<sp/>&gt;=<sp/><ref refid="driver__assistance_8cpp_1acb18293a378c57c1971e2317c62b8af7" kindref="member">d_br</ref>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;dist:<sp/>%.2f,<sp/>speed:<sp/>%.2f,<sp/>free<sp/>road,<sp/>turn<sp/>left&quot;</highlight><highlight class="normal">,<sp/>sectors[<ref refid="driver__assistance_8cpp_1ac261b45b6346e633de22d510c9f6a770" kindref="member">front</ref>],<sp/><ref refid="driver__assistance_8cpp_1a7f7e4724cf57d59513b39c5ecc81adc8" kindref="member">speed</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1af5fbee6c549866cdf0a418f4a1b929ca" kindref="member">drive</ref>(<sp/><ref refid="driver__assistance_8cpp_1a7f7e4724cf57d59513b39c5ecc81adc8" kindref="member">speed</ref>,<sp/><ref refid="driver__assistance_8cpp_1a610313636194c4234b6130ce65c1874b" kindref="member">turn</ref><sp/>+<sp/>0.4<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;dist:<sp/>%.2f,<sp/>speed:<sp/>%.2f,<sp/>free<sp/>road&quot;</highlight><highlight class="normal">,<sp/>sectors[<ref refid="driver__assistance_8cpp_1ac261b45b6346e633de22d510c9f6a770" kindref="member">front</ref>],<sp/><ref refid="driver__assistance_8cpp_1a7f7e4724cf57d59513b39c5ecc81adc8" kindref="member">speed</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1af5fbee6c549866cdf0a418f4a1b929ca" kindref="member">drive</ref>(<sp/><ref refid="driver__assistance_8cpp_1a7f7e4724cf57d59513b39c5ecc81adc8" kindref="member">speed</ref>,<sp/><ref refid="driver__assistance_8cpp_1a610313636194c4234b6130ce65c1874b" kindref="member">turn</ref><sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>an<sp/>obstacle<sp/>in<sp/>the<sp/>frontal<sp/>sector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Searchs<sp/>if<sp/>there<sp/>is<sp/>an<sp/>obstacle-free<sp/>sector.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>(<sp/><ref refid="driver__assistance_8cpp_1ac261b45b6346e633de22d510c9f6a770" kindref="member">front</ref><sp/>-<sp/>1<sp/>);<sp/>j++<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Looks<sp/>in<sp/>all<sp/>sectors<sp/>without<sp/>the<sp/>frontal<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(sectors[<ref refid="driver__assistance_8cpp_1ac261b45b6346e633de22d510c9f6a770" kindref="member">front</ref>+j]<sp/>&gt;=<sp/><ref refid="driver__assistance_8cpp_1acb18293a378c57c1971e2317c62b8af7" kindref="member">d_br</ref><sp/>)<sp/>&amp;&amp;<sp/>(<sp/>sectors[<ref refid="driver__assistance_8cpp_1ac261b45b6346e633de22d510c9f6a770" kindref="member">front</ref>+j]<sp/>&gt;=<sp/>sectors[<ref refid="driver__assistance_8cpp_1ac261b45b6346e633de22d510c9f6a770" kindref="member">front</ref>-j]<sp/>)<sp/>){<sp/></highlight><highlight class="comment">//<sp/>First<sp/>looks<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;dist:<sp/>%.2f,<sp/>speed:<sp/>%.2f,<sp/>obstacle<sp/>,<sp/>turn<sp/>left&quot;</highlight><highlight class="normal">,<sp/>sectors[<ref refid="driver__assistance_8cpp_1ac261b45b6346e633de22d510c9f6a770" kindref="member">front</ref>],<sp/>0.2);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1af5fbee6c549866cdf0a418f4a1b929ca" kindref="member">drive</ref>(<sp/>0.1,<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>sectors[<ref refid="driver__assistance_8cpp_1ac261b45b6346e633de22d510c9f6a770" kindref="member">front</ref>-j]<sp/>&gt;=<sp/><ref refid="driver__assistance_8cpp_1acb18293a378c57c1971e2317c62b8af7" kindref="member">d_br</ref><sp/>)<sp/>&amp;&amp;<sp/>(<sp/>sectors[<ref refid="driver__assistance_8cpp_1ac261b45b6346e633de22d510c9f6a770" kindref="member">front</ref>-j]<sp/>&gt;=<sp/>sectors[<ref refid="driver__assistance_8cpp_1ac261b45b6346e633de22d510c9f6a770" kindref="member">front</ref>+j]<sp/>)<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Then<sp/>looks<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1af5fbee6c549866cdf0a418f4a1b929ca" kindref="member">drive</ref>(<sp/>0.1,<sp/>-0.5<sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;dist:<sp/>%.2f,<sp/>speed:<sp/>%.2f,<sp/>obstacle<sp/>,<sp/>turn<sp/>right&quot;</highlight><highlight class="normal">,<sp/>sectors[<ref refid="driver__assistance_8cpp_1ac261b45b6346e633de22d510c9f6a770" kindref="member">front</ref>],<sp/>0.2);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>there<sp/>is<sp/>not<sp/>one<sp/>obstacle-free<sp/>sector,<sp/>then<sp/>it<sp/>can<sp/>not<sp/>make<sp/>any<sp/>choice.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1a550dc2b19b6710b93b95e10e8c1ad593" kindref="member">integral_logic</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>ranges<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>right_area<sp/>=<sp/><ref refid="driver__assistance_8cpp_1a948754fd289e606979801339f15c12aa" kindref="member">integral</ref>(<sp/>ranges,<sp/>0,<sp/>360<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Right-side<sp/>free<sp/>area.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>left_area<sp/>=<sp/><ref refid="driver__assistance_8cpp_1a948754fd289e606979801339f15c12aa" kindref="member">integral</ref>(<sp/>ranges,<sp/>360,<sp/>720<sp/>);<sp/><sp/></highlight><highlight class="comment">//<sp/>Left-side<sp/>free<sp/>area.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>right_area<sp/>&gt;<sp/>left_area<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;area:<sp/>%.2f,<sp/>speed:<sp/>%.2f,<sp/>OBSTACLE<sp/>,<sp/>turn<sp/>right&quot;</highlight><highlight class="normal">,<sp/>right_area,<sp/>0.2);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1af5fbee6c549866cdf0a418f4a1b929ca" kindref="member">drive</ref>(<sp/>0,<sp/>-1<sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;area:<sp/>%.2f,<sp/>speed:<sp/>%.2f,<sp/>OBSTACLE<sp/>,<sp/>turn<sp/>left&quot;</highlight><highlight class="normal">,<sp/>left_area,<sp/>0.2);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1af5fbee6c549866cdf0a418f4a1b929ca" kindref="member">drive</ref>(<sp/>0,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1a948754fd289e606979801339f15c12aa" kindref="member">integral</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>values,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>start;<sp/>i<sp/>&lt;<sp/>end;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>result<sp/>+<sp/>(<sp/>values[i]<sp/>+<sp/>values[i+1])<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1af5fbee6c549866cdf0a418f4a1b929ca" kindref="member">drive</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>straight,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1a610313636194c4234b6130ce65c1874b" kindref="member">turn</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::Twist<sp/>my_vel;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>my_vel.linear.x<sp/>=<sp/>straight;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>my_vel.angular.z<sp/>=<sp/><ref refid="driver__assistance_8cpp_1a610313636194c4234b6130ce65c1874b" kindref="member">turn</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1a350594df3e8f6948c8462edfd41ce086" kindref="member">pub</ref>.publish(my_vel);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="driver__assistance_8cpp_1a5d7a455f1d58eb3e57a53289086ac114" kindref="member">server_response</ref>(<sp/>final_assignment::Command::Request<sp/>&amp;req,<sp/>final_assignment::Command::Response<sp/>&amp;res<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>req.command<sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="driver__assistance_8cpp_1a7f7e4724cf57d59513b39c5ecc81adc8" kindref="member">speed</ref><sp/>&gt;=<sp/>0.1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1a7f7e4724cf57d59513b39c5ecc81adc8" kindref="member">speed</ref><sp/>=<sp/><ref refid="driver__assistance_8cpp_1a7f7e4724cf57d59513b39c5ecc81adc8" kindref="member">speed</ref><sp/>-<sp/>0.1;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>req.command<sp/>==<sp/></highlight><highlight class="charliteral">&apos;w&apos;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1a7f7e4724cf57d59513b39c5ecc81adc8" kindref="member">speed</ref><sp/>=<sp/><ref refid="driver__assistance_8cpp_1a7f7e4724cf57d59513b39c5ecc81adc8" kindref="member">speed</ref><sp/>+<sp/>0.1;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>req.command<sp/>==<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1a7f7e4724cf57d59513b39c5ecc81adc8" kindref="member">speed</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>req.command<sp/>==<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1a610313636194c4234b6130ce65c1874b" kindref="member">turn</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>req.command<sp/>==<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1a610313636194c4234b6130ce65c1874b" kindref="member">turn</ref><sp/>=<sp/><ref refid="driver__assistance_8cpp_1a610313636194c4234b6130ce65c1874b" kindref="member">turn</ref><sp/>-<sp/>0.1;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>req.command<sp/>==<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1a610313636194c4234b6130ce65c1874b" kindref="member">turn</ref><sp/>=<sp/><ref refid="driver__assistance_8cpp_1a610313636194c4234b6130ce65c1874b" kindref="member">turn</ref><sp/>+<sp/>0.1;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req.command<sp/>==<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1a407c3efba665d276a38229f905bef352" kindref="member">is_active</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req.command<sp/>==<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1a407c3efba665d276a38229f905bef352" kindref="member">is_active</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>distance<sp/>break<sp/>depends<sp/>on<sp/>the<sp/>velocity,<sp/>when<sp/>the<sp/>robot<sp/>has<sp/>an<sp/>higer<sp/>speed<sp/>it<sp/>increases<sp/>the<sp/>d_br<sp/>variable.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1acb18293a378c57c1971e2317c62b8af7" kindref="member">d_br</ref><sp/>=<sp/>1.2<sp/>+<sp/><ref refid="driver__assistance_8cpp_1a7f7e4724cf57d59513b39c5ecc81adc8" kindref="member">speed</ref>/18;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>res.linear<sp/>=<sp/><ref refid="driver__assistance_8cpp_1a7f7e4724cf57d59513b39c5ecc81adc8" kindref="member">speed</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>res.angular<sp/>=<sp/><ref refid="driver__assistance_8cpp_1a610313636194c4234b6130ce65c1874b" kindref="member">turn</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MAIN<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main<sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>the<sp/>ros<sp/>node.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;driver_assistance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>nh;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialises<sp/>the<sp/>values<sp/>of<sp/>the<sp/>global<sp/>variables<sp/>speed<sp/>and<sp/>d_br.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1a7f7e4724cf57d59513b39c5ecc81adc8" kindref="member">speed</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1acb18293a378c57c1971e2317c62b8af7" kindref="member">d_br</ref><sp/>=<sp/>1.2;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Subscribes<sp/>to<sp/>the<sp/>topic<sp/>base_scan<sp/>to<sp/>receive<sp/>informations<sp/>about<sp/>the<sp/>distance<sp/>from<sp/>obstacles<sp/>from<sp/>the<sp/></highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>laser<sp/>scanner<sp/>on<sp/>the<sp/>robot.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Subscriber<sp/>sub<sp/>=<sp/>nh.subscribe(</highlight><highlight class="stringliteral">&quot;/base_scan&quot;</highlight><highlight class="normal">,<sp/>1,<sp/><ref refid="driver__assistance_8cpp_1a91c136bc3c91e4ea7a59bbbc1614109f" kindref="member">functionCallback</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Creates<sp/>a<sp/>service<sp/>for<sp/>the<sp/>keyboard_pilot_node<sp/>to<sp/>control<sp/>the<sp/>speed<sp/>of<sp/>the<sp/>robot,<sp/>to<sp/>reset<sp/>the<sp/>position,<sp/></highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>to<sp/>exit<sp/>from<sp/>the<sp/>simulation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::ServiceServer<sp/>service<sp/>=<sp/>nh.advertiseService(</highlight><highlight class="stringliteral">&quot;/command&quot;</highlight><highlight class="normal">,<sp/><ref refid="driver__assistance_8cpp_1a5d7a455f1d58eb3e57a53289086ac114" kindref="member">server_response</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Creates<sp/>a<sp/>publisher<sp/>to<sp/>the<sp/>cmd_vel<sp/>topic,<sp/>to<sp/>guide<sp/>the<sp/>robot<sp/>in<sp/>real-time<sp/>controlling<sp/>its<sp/>velocity.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="driver__assistance_8cpp_1a350594df3e8f6948c8462edfd41ce086" kindref="member">pub</ref><sp/>=<sp/>nh.advertise&lt;geometry_msgs::Twist&gt;(</highlight><highlight class="stringliteral">&quot;/cmd_vel&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::spin();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/driver_assistance.cpp"/>
  </compounddef>
</doxygen>
